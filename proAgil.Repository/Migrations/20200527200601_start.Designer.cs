// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;

namespace proAgil.Repository.Migrations
{
    [DbContext(typeof(proAgilContext))]
    [Migration("20200527200601_start")]
    partial class start
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("proAgil.Domain.Evento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("dataEvento");

                    b.Property<string>("email");

                    b.Property<string>("imageUrl");

                    b.Property<string>("local");

                    b.Property<string>("lote");

                    b.Property<int>("qtdePessoas");

                    b.Property<string>("telefone");

                    b.Property<string>("tema");

                    b.HasKey("id");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("proAgil.Domain.Lote", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EventoId");

                    b.Property<DateTime?>("dataFim");

                    b.Property<DateTime?>("dataInicio");

                    b.Property<string>("nome");

                    b.Property<decimal>("preco");

                    b.Property<int>("quantidade");

                    b.HasKey("id");

                    b.HasIndex("EventoId");

                    b.ToTable("Lotes");
                });

            modelBuilder.Entity("proAgil.Domain.Palestrante", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("descricao");

                    b.Property<string>("email");

                    b.Property<string>("imageUrl");

                    b.Property<string>("nome");

                    b.Property<string>("telefone");

                    b.HasKey("id");

                    b.ToTable("Palestrantes");
                });

            modelBuilder.Entity("proAgil.Domain.PalestranteEvento", b =>
                {
                    b.Property<int>("EventoId");

                    b.Property<int>("PalestranteId");

                    b.HasKey("EventoId", "PalestranteId");

                    b.HasIndex("PalestranteId");

                    b.ToTable("PalestrantesEventos");
                });

            modelBuilder.Entity("proAgil.Domain.RedeSocial", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("EventoId");

                    b.Property<int?>("PalestranteId");

                    b.Property<string>("nome");

                    b.Property<string>("url");

                    b.HasKey("id");

                    b.HasIndex("EventoId");

                    b.HasIndex("PalestranteId");

                    b.ToTable("RedeSociais");
                });

            modelBuilder.Entity("proAgil.Domain.Lote", b =>
                {
                    b.HasOne("proAgil.Domain.Evento", "Evento")
                        .WithMany("Lotes")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("proAgil.Domain.PalestranteEvento", b =>
                {
                    b.HasOne("proAgil.Domain.Evento", "Evento")
                        .WithMany("PalestrantesEventos")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("proAgil.Domain.Palestrante", "palestrante")
                        .WithMany("PalestrantesEventos")
                        .HasForeignKey("PalestranteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("proAgil.Domain.RedeSocial", b =>
                {
                    b.HasOne("proAgil.Domain.Evento", "Evento")
                        .WithMany("RedesSociais")
                        .HasForeignKey("EventoId");

                    b.HasOne("proAgil.Domain.Palestrante", "Palestrante")
                        .WithMany("RedesSociais")
                        .HasForeignKey("PalestranteId");
                });
#pragma warning restore 612, 618
        }
    }
}
